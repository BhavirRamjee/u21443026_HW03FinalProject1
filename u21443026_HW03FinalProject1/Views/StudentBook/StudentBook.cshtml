@model u21443026_HW03FinalProject1.Models.StudentBooksVM
@{
    ViewBag.Title = "StudentBook";
}
@using PagedList.Mvc
<style>

    .create-lookup-link {
        background-color: #3498db;
        color: #fff;
        padding: 10px 20px;
        text-decoration: none;
        border-radius: 5px;
    }

        /* Change the button color on hover */
        .create-lookup-link:hover {
            background-color: #27898b;
        }
</style>

<div class="row">

    <div class="col-md-6">
        <div class="col">
            <a href="@Url.Action("Create", "Students")" class="btn btn-lg" style="border-radius: 20px; background-color:#27898b; color:white">Create</a>
        </div>

        <table class="table" style="width:100%">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.students.FirstOrDefault().name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.students.FirstOrDefault().surname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.students.FirstOrDefault().birthdate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.students.FirstOrDefault().gender)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.students.FirstOrDefault().RegisterClass)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.students.FirstOrDefault().point)
                </th>
            </tr>
            @foreach (var item in Model.PageStudents)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.birthdate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RegisterClass)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.point)
                    </td>
                </tr>
            }
        </table>

        <div class="pagination" style="margin-left: 50px;">
            Page @(Model.PageStudents.PageCount < Model.PageStudents.PageNumber ? 0 : Model.PageStudents.PageNumber)
            of @Model.PageStudents.PageCount
            <br />
            <div style="margin-top: 30px;">
                @Html.PagedListPager(Model.PageStudents, Page => Url.Action("StudentBook", new { Page }))
            </div>
        </div>
    </div>

    <div class="col-md-6">

        <div class="col">
            <a href="@Url.Action("Create", "Books")" class="btn btn-lg" style="border-radius: 20px; background-color:#27898b; color:white">Create</a>
        </div>

        <table class="table" style="width:100%">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Books.FirstOrDefault().name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Books.FirstOrDefault().pagecount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Books.FirstOrDefault().point)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Books.FirstOrDefault().authors)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Books.FirstOrDefault().types)
                </th>
                <th>
                    Status
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.Books)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.pagecount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.point)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.authors.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.types.name)
                    </td>

                    <td>

                        @if (Model.Borrows != null && Model.Borrows.Any(b => b.bookId == item.bookId))
                        {
                            var borrow = Model.Borrows.First(b => b.bookId == item.bookId);
                            @*@Html.DisplayFor(modelItem => borrow.takenDate)
                                @Html.DisplayFor(modelItem => borrow.broughtDate)*@


                            if (borrow.broughtDate > borrow.takenDate)
                            {

                                <p>Available</p>


                            }
                            else
                            {
                                <p>UnAvailable</p>
                            }
                        }
                        else
                        {
                            <!-- Handle the case when there is no associated borrow -->
                        }


                    </td>
                    <td>
                    </td>
                </tr>
            }
        </table>

        <div class="pagination" style="margin-left: 50px;">
            Page @(Model.Books.PageCount < Model.Books.PageNumber ? 0 : Model.Books.PageNumber)
            of @Model.Books.PageCount
            <br />
            <div style="margin-top: 30px;">
                @Html.PagedListPager(Model.Books, Page => Url.Action("StudentBook", new { Page }))
            </div>
        </div>

    </div>
</div>

<div id="myModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-content">
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {
        // Function to handle Edit link click event in the Combined View and Details modal
        $(".edit-link, .edit-link-in-modal").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");

            $.get(url, function (data) {
                $("#modal-content").empty();
                $("#modal-content").html(data);
                $("#myModal").modal("show");
            });
        });

        // Function to handle form submission within the modal
        $("#modal-content").on("submit", "form", function (e) {
            e.preventDefault();
            var form = $(this);
            var url = form.attr("action");
            var formData = form.serialize();

            $.post(url, formData, function (data) {
                $("#myModal").modal("hide");
                location.reload();
            });
        });

        // Function to handle other links (details, delete, create) within the modal
        $(".details-link, .delete-link, .create-link, .create-lookup-link").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");

            $.get(url, function (data) {
                $("#modal-content").empty();
                $("#modal-content").html(data);
                $("#myModal").modal("show");
            });
        });
    });
</script>